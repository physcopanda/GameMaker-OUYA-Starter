<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globals_init_game();
globals_init_controllers();

instance_create(0, 0, obj_application_surface);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// READ CONTROLLERS
// emulate a controller if not in desktop os
// this will read the keyboard into 
if(os_type != os_android){
    keyboard_to_gamepad(0);
}

// seek controllers if not registered and read them!
for(var i=1; i&lt;=4; i++){
    if(global.p[i] == GAMEPAD_NONE){
        if(global.seeking_gamepads){
            //show_debug_message("seek" + string(i));
            var found = gamepad_seek(i);
        }
    } else {
        // read pad
        gamepad(i, global.p[i]);
    }
}
var vs = 0;
var hs = 0;
if(abs(global.p_axislh[1]) &gt; ANALOGUE_DEADZONE){
    hs = global.p_axislh[1]*10;
}
if(abs(global.p_axislv[1]) &gt; ANALOGUE_DEADZONE){
    vs = global.p_axislv[1]*10;
}
background_hspeed[0] = hs;
background_vspeed[0] = vs;

if(global.p_o[1]){
    if(instance_exists(obj_darkness)){
        with(obj_darkness){
            instance_destroy();
        }
    } else {
        instance_create(0, 0, obj_darkness);       
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
